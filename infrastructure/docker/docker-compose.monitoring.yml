version: '3.8'

# =============================================================================
# BILTEN MONITORING STACK - DOCKER COMPOSE
# =============================================================================
# 
# Monitoring and observability stack for the Bilten platform
# Includes: Prometheus, Grafana, AlertManager, Logstash, Filebeat
#
# Usage: docker-compose -f docker-compose.monitoring.yml up -d
# =============================================================================

services:
  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: bilten-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ../../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../../monitoring/prometheus/rules:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - bilten_monitoring

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: bilten-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin_password
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3004:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - bilten_monitoring

  # AlertManager for Alerting
  alertmanager:
    image: prom/alertmanager:latest
    container_name: bilten-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - alertmanager_data:/alertmanager
      - ../../monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - bilten_monitoring

  # Logstash for Log Processing
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: bilten-logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ../../monitoring/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ../../monitoring/logstash/pipeline:/usr/share/logstash/pipeline
      - ../../monitoring/logstash/templates:/usr/share/logstash/templates
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    restart: unless-stopped
    networks:
      - bilten_monitoring

  # Filebeat for Log Collection
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: bilten-filebeat
    user: root
    volumes:
      - ../../monitoring/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log/docker:/var/log/docker:ro
    restart: unless-stopped
    networks:
      - bilten_monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  bilten_monitoring:
    driver: bridge
    name: bilten_monitoring_network