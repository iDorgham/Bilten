version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bilten-postgres
    environment:
      POSTGRES_DB: bilten_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bilten-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build: .
    container_name: bilten-api
    environment:
      NODE_ENV: development
      PORT: 3003
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: bilten_dev
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: dev-jwt-secret-key-not-for-production
      FRONTEND_URL: http://localhost:3000
      STORAGE_TYPE: local
      UPLOAD_DIR: uploads
    ports:
      - "3003:3003"
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: